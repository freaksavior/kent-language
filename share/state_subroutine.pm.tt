package Kent::Parser::States;

[% FOREACH state in states %]
sub [% state.name %] {
    my ($self) = @_;
    my $token = $self->lexer->next;
    [% FOREACH bound in state.bounds -%]
    if ($token->name eq '[% bound.name %]') { return $self->[% state.name %]_[% bound.name %] }
    [% END -%]
    while ($token->name eq 'space') { $token = $self->lexer->next; }
    AGAIN:
    [% FOREACH next in state.nexts -%]
    if ($token->name eq '[% next.name %]') { return $self->[% state.name %]_[% next.name %] }
    [% END -%]
    [% FOREACH other in state.others -%]
    if ($token->name eq '[% other.name %]') { $token = $self->lexer->next; goto AGAIN }
    [% END -%]
    die "Unexpected $token->name at line $self->lexer->line, column $self->lexer->column";
}
[% END %]
