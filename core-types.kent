===== BEGIN CORE CLASSES =====
    Object
        Is:
            Object
        Does:
            new                 # does what it says on the box
            destroy             # does what it says on the box
            classify            # returns an array representing this object's method search order
            default             # abstract method; what to do if attribute doesn't exist.
            do                  # abstract method; what to do in void context with no requested attribute.
            is                  # returns or reassigns... I'm not sure how this should work.
            has                 # true if an attribute by given name is available.
    Bool
        Is:
            Object
            Bool
        Does:
            bool
    Number
        Is:
            Object
            Number
        Does:
            num
            str
    String
        Is:
            Object
            String
        Does:
            str
            num                 # may throw a fit if numeric conversion isn't possible... maybe, I think?
            m                   # string.m(regex) returns a Match object
            s                   # string.s(regex) ummm I don't know how I want this to behave.
    Array
        Is:
            Object
            Array
        Does:
            map [ code ]
            rmap [ code ]       # recursive map
            reduce [ code ]
            count
            reverse
            grep [ code ]       # Filter must return true or false... I think?
            sort [ code ]       # I'm thinking Perl's sort is probably good to emulate?
            join( glue )        # 'glue' must stringify... though we don't dictate how!
            shift
            unshift
            push
            pop
            insert( position, object )
            delete( position )
            each [ code ]       # default becomes the array element being yeah'd.
    Hash
        Is:
            Object
            Hash
        Does: (probably look at the 'tie' methods for hashes in Perl)
            keys                # returns / "is" an array
            values              # ditto
            each
            map
            rmap
            grep
    Handle
        Is:
            Object
            Handle
        Does:
            print
            say
        Has:
            isep                # input record separator, which is "\n" by default
            osep                # output record separator, which is "\n" by default
            read                # a callback that gets executed whenever
            close
    Regex
        Is:
            Object
            Regex
        Does:
            str                 # display the regex in some meaningful way

===== END CORE CLASSES =====
===== BEGIN PROVIDED CLASSES =====

    Table
        Is:
            Object
            Array
            Table
        Does:
            insert
            delete
            update
            select

===== END PROVIDED CLASSES =====
===== BEGIN PROVIDED LIBRARIES =====
    STDIO
    Tables: Provides data structure like a database table (but is really an array of hashes) with select, insert, delete, update methods.
===== BEGIN SERIALIZATION FORMATS =====
    CSV
    JSON
    YAML
    XML (lol)
    INI (lol for totally different reasons)
    MySQL dumps; perhaps dumps in other databases?
===== END SERIALIZATION FORMATS =====
===== BEGIN IMAGE FILE FORMATS =====
===== END IMAGE FILE FORMATS =====
===== BEGIN AUDIO FILE FORMATS =====
===== END AUDIO FILE FORMATS =====
===== BEGIN CONTAINER FORMATS =====
===== END CONTAINER FORMATS =====
